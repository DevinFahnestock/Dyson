{"ast":null,"code":"var _jsxFileName = \"/Users/devinwall/git/Dyson/packages/frontend/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport { useUser } from \"./lib/firebase\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport PlanetView from \"./components/PlanetView/PlanetView\";\nimport SignInScreen from \"./components/SignInScreen/SignInScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst address = \"192.168.50.138\";\nconst socket = io(`http://${address}:25145`, {\n  transports: [\"websocket\", \"polling\"]\n});\n\nfunction App() {\n  _s();\n\n  const [planets, setPlanets] = useState([]);\n  const user = useUser();\n\n  const updatePlanet = planetData => {\n    setPlanets(planets => {\n      let copy = [...planets];\n      copy[copy.findIndex(planet => planet.id === planetData.id)] = planetData;\n      return copy;\n    });\n  };\n\n  useEffect(() => {\n    socket.on(\"connect\", () => {\n      console.log(\"Successfully connected to server\");\n    });\n    socket.on(\"updateAllGameData\", gameData => {\n      setPlanets(gameData);\n    });\n    socket.on(\"planetUpdate\", data => {\n      updatePlanet(data);\n    });\n    return () => {\n      socket.off(\"planets\");\n      socket.off(\"planetUpdate\");\n    };\n  }, [planets]);\n  useEffect(() => {\n    !user && setPlanets([]);\n    user && socket.emit(\"userStateChanged\", user.uid);\n    socket.on(\"NoUserExists\", () => {\n      user && socket.emit(\"CreateNewUserData\", user);\n    });\n  }, [user, user === null || user === void 0 ? void 0 : user.uid]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), user && /*#__PURE__*/_jsxDEV(PlanetView, {\n      socket: socket,\n      user: user,\n      planets: planets\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this), !user && /*#__PURE__*/_jsxDEV(SignInScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"XmNxLdNMUBIyPpUTcVMgAjm6eA4=\", false, function () {\n  return [useUser];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","useUser","NavBar","PlanetView","SignInScreen","address","socket","transports","App","planets","setPlanets","user","updatePlanet","planetData","copy","findIndex","planet","id","on","console","log","gameData","data","off","emit","uid"],"sources":["/Users/devinwall/git/Dyson/packages/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport io from \"socket.io-client\"\n\nimport { useUser } from \"./lib/firebase\"\n\nimport \"./App.css\"\nimport NavBar from \"./components/NavBar/NavBar\"\nimport PlanetView from \"./components/PlanetView/PlanetView\"\nimport SignInScreen from \"./components/SignInScreen/SignInScreen\"\n\nconst address = \"192.168.50.138\"\n\nconst socket = io(`http://${address}:25145`, { transports: [\"websocket\", \"polling\"] })\n\nfunction App() {\n  const [planets, setPlanets] = useState<any[]>([])\n\n  const user: any = useUser()\n\n  const updatePlanet = (planetData: any) => {\n    setPlanets((planets) => {\n      let copy: any[] = [...planets]\n      copy[copy.findIndex(planet => planet.id === planetData.id)] = planetData\n      return copy\n    })\n  }\n\n  useEffect(() => {\n    socket.on(\"connect\", () => {\n      console.log(\"Successfully connected to server\")\n    })\n\n    socket.on(\"updateAllGameData\", gameData => {\n      setPlanets(gameData)\n    })\n\n    socket.on(\"planetUpdate\", (data) => {\n      updatePlanet(data)\n    })\n\n    return () => {\n      socket.off(\"planets\")\n      socket.off(\"planetUpdate\")\n    }\n  }, [planets])\n\n  useEffect(() => {\n\n    !user && setPlanets([])\n\n    user && socket.emit(\"userStateChanged\", user.uid)\n    \n    socket.on(\"NoUserExists\", () => { \n      user && socket.emit(\"CreateNewUserData\", user)}) \n  }, [user, user?.uid])\n\n  return (\n    <div className=\"App\">\n      <NavBar />\n      {user && (<PlanetView socket={socket} user={user} planets={planets} />)}\n      {!user && <SignInScreen />}\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,SAASC,OAAT,QAAwB,gBAAxB;AAEA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,YAAP,MAAyB,wCAAzB;;AAEA,MAAMC,OAAO,GAAG,gBAAhB;AAEA,MAAMC,MAAM,GAAGN,EAAE,CAAE,UAASK,OAAQ,QAAnB,EAA4B;EAAEE,UAAU,EAAE,CAAC,WAAD,EAAc,SAAd;AAAd,CAA5B,CAAjB;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAQ,EAAR,CAAtC;EAEA,MAAMa,IAAS,GAAGV,OAAO,EAAzB;;EAEA,MAAMW,YAAY,GAAIC,UAAD,IAAqB;IACxCH,UAAU,CAAED,OAAD,IAAa;MACtB,IAAIK,IAAW,GAAG,CAAC,GAAGL,OAAJ,CAAlB;MACAK,IAAI,CAACA,IAAI,CAACC,SAAL,CAAeC,MAAM,IAAIA,MAAM,CAACC,EAAP,KAAcJ,UAAU,CAACI,EAAlD,CAAD,CAAJ,GAA8DJ,UAA9D;MACA,OAAOC,IAAP;IACD,CAJS,CAAV;EAKD,CAND;;EAQAf,SAAS,CAAC,MAAM;IACdO,MAAM,CAACY,EAAP,CAAU,SAAV,EAAqB,MAAM;MACzBC,OAAO,CAACC,GAAR,CAAY,kCAAZ;IACD,CAFD;IAIAd,MAAM,CAACY,EAAP,CAAU,mBAAV,EAA+BG,QAAQ,IAAI;MACzCX,UAAU,CAACW,QAAD,CAAV;IACD,CAFD;IAIAf,MAAM,CAACY,EAAP,CAAU,cAAV,EAA2BI,IAAD,IAAU;MAClCV,YAAY,CAACU,IAAD,CAAZ;IACD,CAFD;IAIA,OAAO,MAAM;MACXhB,MAAM,CAACiB,GAAP,CAAW,SAAX;MACAjB,MAAM,CAACiB,GAAP,CAAW,cAAX;IACD,CAHD;EAID,CAjBQ,EAiBN,CAACd,OAAD,CAjBM,CAAT;EAmBAV,SAAS,CAAC,MAAM;IAEd,CAACY,IAAD,IAASD,UAAU,CAAC,EAAD,CAAnB;IAEAC,IAAI,IAAIL,MAAM,CAACkB,IAAP,CAAY,kBAAZ,EAAgCb,IAAI,CAACc,GAArC,CAAR;IAEAnB,MAAM,CAACY,EAAP,CAAU,cAAV,EAA0B,MAAM;MAC9BP,IAAI,IAAIL,MAAM,CAACkB,IAAP,CAAY,mBAAZ,EAAiCb,IAAjC,CAAR;IAA+C,CADjD;EAED,CARQ,EAQN,CAACA,IAAD,EAAOA,IAAP,aAAOA,IAAP,uBAAOA,IAAI,CAAEc,GAAb,CARM,CAAT;EAUA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,EAEGd,IAAI,iBAAK,QAAC,UAAD;MAAY,MAAM,EAAEL,MAApB;MAA4B,IAAI,EAAEK,IAAlC;MAAwC,OAAO,EAAEF;IAAjD;MAAA;MAAA;MAAA;IAAA,QAFZ,EAGG,CAACE,IAAD,iBAAS,QAAC,YAAD;MAAA;MAAA;MAAA;IAAA,QAHZ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GAjDQH,G;UAGWP,O;;;KAHXO,G;AAmDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}